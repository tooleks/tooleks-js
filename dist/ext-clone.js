/*! Copyright (C) 2018 Oleksandr Tolochko. */
!function(t,o){for(var e in o)t[e]=o[e]}(exports,function(t){var o={};function e(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,e),r.l=!0,r.exports}return e.m=t,e.c=o,e.d=function(t,o,n){e.o(t,o)||Object.defineProperty(t,o,{configurable:!1,enumerable:!0,get:n})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=1)}([function(t,o,e){"use strict";t.exports=Object.freeze({enable:function(){Boolean.prototype.clone=function(){return Boolean(this)},Number.prototype.clone=function(){return Number(this)},String.prototype.clone=function(){return String(this)},Array.prototype.clone=function(){return this.map(t=>void 0!==t&&null!==t?t.clone():t)},Map.prototype.clone=function(){return new Map(Array.from(this).clone())},Date.prototype.clone=function(){return new Date(this.getTime())},Object.prototype.clone=function(){if(this.nodeType&&"function"==typeof this.cloneNode)return this.cloneNode(!0);if(!this.prototype){const t={};for(let o in this)if(this.hasOwnProperty(o)){const e=this[o];t[o]=void 0!==e&&null!==e?e.clone():e}return t}throw new Error("Unable to clone the object.")},Function.prototype.clone=function(){const t=this,o=function(){return t.apply(this,arguments)};for(let t in this)this.hasOwnProperty(t)&&(o[t]=this[t]);return o}},disable:function(){Boolean.prototype.clone=void 0,Number.prototype.clone=void 0,String.prototype.clone=void 0,Array.prototype.clone=void 0,Map.prototype.clone=void 0,Date.prototype.clone=void 0,Object.prototype.clone=void 0,Function.prototype.clone=void 0},getTypes:function(){return[Boolean,Number,String,Array,Map,Date,Object,Function]}})},function(t,o,e){"use strict";const n=e(0);t.exports=n}]));